{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\client-starter-code\\\\src\\\\components\\\\containers\\\\StudentContainer.js\";\n\n/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudentContainer extends Component {\n  // Get student data from back-end database\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  } // Render Student view by passing student data as props to the corresponding View component\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        student: this.props.student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n} // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n\n\nconst mapState = state => {\n  return {\n    student: state.student // Get the State object from Reducer \"student\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id))\n  };\n}; // Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\n\nexport default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"sources":["C:/Users/super/client-starter-code/src/components/containers/StudentContainer.js"],"names":["Header","React","Component","connect","fetchStudentThunk","StudentView","StudentContainer","componentDidMount","props","fetchStudent","match","params","id","render","student","mapState","state","mapDispatch","dispatch"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,WAAT,QAA4B,UAA5B;;;AAEA,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AACvC;AACAK,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACD,GALsC,CAOvC;;;AACAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAfsC,C,CAkBzC;AACA;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLF,IAAAA,OAAO,EAAEE,KAAK,CAACF,OADV,CACoB;;AADpB,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAMG,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLT,IAAAA,YAAY,EAAGG,EAAD,IAAQM,QAAQ,CAACd,iBAAiB,CAACQ,EAAD,CAAlB;AADzB,GAAP;AAGD,CAJD,C,CAMA;AACA;AACA;;;AACA,eAAeT,OAAO,CAACY,QAAD,EAAWE,WAAX,CAAP,CAA+BX,gBAA/B,CAAf","sourcesContent":["/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudentThunk } from \"../../store/thunks\";\r\nimport { StudentView } from \"../views\";\r\n\r\nclass StudentContainer extends Component {\r\n  // Get student data from back-end database\r\n  componentDidMount() {\r\n    //getting student ID from url\r\n    this.props.fetchStudent(this.props.match.params.id);\r\n  }\r\n\r\n  // Render Student view by passing student data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <StudentView student={this.props.student} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student,  // Get the State object from Reducer \"student\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(StudentContainer);"]},"metadata":{},"sourceType":"module"}