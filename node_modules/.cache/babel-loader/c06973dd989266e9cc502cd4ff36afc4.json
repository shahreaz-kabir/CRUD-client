{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\client-starter-code\\\\src\\\\components\\\\containers\\\\NewCampusContainer.js\";\nimport Header from \"./Header\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NewCampusView from \"../views/NewCampusView\";\nimport { addCampusThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      let campus;\n\n      if (this.state.imageUrl === \"\") {\n        campus = {\n          name: this.state.name,\n          address: this.state.address,\n          description: this.state.description\n        };\n      } else {\n        campus = {\n          name: this.state.name,\n          imageUrl: this.state.imageUrl,\n          address: this.state.address,\n          description: this.state.description\n        };\n      }\n\n      let newCampus = await this.props.addCampus(campus);\n      this.setState({\n        name: \"\",\n        imageUrl: \"\",\n        address: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      imageUrl: \"\",\n      address: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"sources":["C:/Users/super/client-starter-code/src/components/containers/NewCampusContainer.js"],"names":["Header","Component","connect","Redirect","NewCampusView","addCampusThunk","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","imageUrl","address","description","newCampus","addCampus","redirect","redirectId","id","componentWillUnmount","render","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport NewCampusView from \"../views/NewCampusView\";\r\nimport { addCampusThunk } from \"../../store/thunks\";\r\n\r\nclass NewCampusContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      imageUrl: \"\",\r\n      address: \"\",\r\n      description: \"\",\r\n      redirect: false,\r\n      redirectId: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent browser reload/refresh after submit.\r\n    let campus;\r\n    if (this.state.imageUrl === \"\") {\r\n      campus = {\r\n        name: this.state.name,\r\n        address: this.state.address,\r\n        description: this.state.description,\r\n      };\r\n    } else {\r\n      campus = {\r\n        name: this.state.name,\r\n        imageUrl: this.state.imageUrl,\r\n        address: this.state.address,\r\n        description: this.state.description,\r\n      };\r\n    }\r\n\r\n    let newCampus = await this.props.addCampus(campus);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      imageUrl: \"\",\r\n      address: \"\",\r\n      description: \"\",\r\n      redirect: true,\r\n      redirectId: newCampus.id,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ redirect: false, redirectId: null });\r\n  }\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={`/campus/${this.state.redirectId}`} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <NewCampusView\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    addCampus: (campus) => dispatch(addCampusThunk(campus)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatch)(NewCampusContainer);"]},"metadata":{},"sourceType":"module"}